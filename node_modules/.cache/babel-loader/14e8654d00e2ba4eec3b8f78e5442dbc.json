{"ast":null,"code":"import axios from 'axios';\n\nconst weatherAPI = () => {\n  function requestWeatherDetails(city_code) {\n    console.log(\"weather bitches\");\n    axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${city_code}.json`, {\n      params: {\n        apikey: this.apiKey\n      }\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        weatherData: data\n      });\n      console.log(data);\n    });\n  }\n\n  function getCityList(city_name) {\n    console.log(\"getting city list\");\n    axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete`, {\n      params: {\n        apikey: this.apiKey,\n        q: city_name\n      }\n    }).then(({\n      data\n    }) => {\n      console.log(data); //filter the data to key, localizedName (see console)\n\n      var new_data = {};\n      data.map((city, index) => {\n        new_data[city.Key] = city.LocalizedName + \", \" + city.Country.LocalizedName;\n      });\n      console.log(new_data);\n    });\n  }\n};\n\nexport default weatherAPI;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/weatherAPI.js"],"names":["axios","weatherAPI","requestWeatherDetails","city_code","console","log","get","params","apikey","apiKey","then","data","setState","weatherData","getCityList","city_name","q","new_data","map","city","index","Key","LocalizedName","Country"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAEvB,WAASC,qBAAT,CAA+BC,SAA/B,EAA0C;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAW,2DAA0DH,SAAU,OAA/E,EAAuF;AACrFI,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,KAAKC;AADP;AAD6E,KAAvF,EAIGC,IAJH,CAIQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACD,KAPD;AAQD;;AAED,WAASG,WAAT,CAAqBC,SAArB,EAAgC;AAC9BX,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAW,qEAAX,EAAiF;AAC/EC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,KAAKC,MADP;AAENO,QAAAA,CAAC,EAAED;AAFG;AADuE,KAAjF,EAKGL,IALH,CAKQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACpBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ,EADoB,CAEpB;;AACA,UAAIM,QAAQ,GAAG,EAAf;AACAN,MAAAA,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxBH,QAAAA,QAAQ,CAACE,IAAI,CAACE,GAAN,CAAR,GAAqBF,IAAI,CAACG,aAAL,GAAqB,IAArB,GAA4BH,IAAI,CAACI,OAAL,CAAaD,aAA9D;AACD,OAFD;AAGAlB,MAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;AACD,KAbD;AAcD;AACF,CA/BD;;AAiCA,eAAehB,UAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst weatherAPI = () => {\r\n  \r\n  function requestWeatherDetails(city_code) {\r\n    console.log(\"weather bitches\");\r\n    axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${city_code}.json`, {\r\n      params: {\r\n        apikey: this.apiKey\r\n      }\r\n    }).then(({ data }) => {\r\n      this.setState({ weatherData: data });\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  function getCityList(city_name) {\r\n    console.log(\"getting city list\")\r\n    axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete`, {\r\n      params: {\r\n        apikey: this.apiKey,\r\n        q: city_name\r\n      }\r\n    }).then(({ data }) => {\r\n      console.log(data)\r\n      //filter the data to key, localizedName (see console)\r\n      var new_data = {};\r\n      data.map((city, index) => {\r\n        new_data[city.Key] = city.LocalizedName + \", \" + city.Country.LocalizedName;\r\n      })\r\n      console.log(new_data);\r\n    });\r\n  }\r\n}\r\n\r\nexport default weatherAPI;"]},"metadata":{},"sourceType":"module"}