{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\WeatherCard.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport Typography from '@material-ui/core/Typography';\nimport Prediction from './Prediction';\nimport { requestFiveDayPrediction } from '../weatherAPI';\nimport '../styles.css';\n\nclass WeatherCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favStat: false,\n      futureData: [],\n      createForecast: false\n    };\n  }\n\n  async componentDidMount() {\n    const forecast = await requestFiveDayPrediction(this.props.code);\n    console.log(forecast);\n    this.setState({\n      futureData: forecast,\n      createForecast: true\n    });\n  }\n\n  changeFavStat() {\n    this.setState({\n      favStat: !this.state.favStat\n    });\n    this.props.callback(this.props.code, this.state.favStat);\n  }\n\n  getFutureforecast() {\n    console.log(this.state);\n\n    if (this.state.futureData.DailyForecasts !== undefined) {\n      return this.state.futureData.DailyForecasts.map(day => {\n        return React.createElement(Prediction, {\n          data: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n    }\n\n    return \"oopsy\";\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(`${this.getFutureforecast()}`);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.city_name, this.state.futureData.DailyForecasts), React.createElement(IconButton, {\n      className: \"fav-icon\",\n      onClick: () => this.changeFavStat(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.favStat ? React.createElement(FavoriteIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(FavoriteBorderIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.futureData.Headline.Text), this.state.createForecast ? this.getFutureforecast() : React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/WeatherCard.js"],"names":["React","Card","IconButton","FavoriteIcon","FavoriteBorderIcon","Typography","Prediction","requestFiveDayPrediction","WeatherCard","Component","state","favStat","futureData","createForecast","componentDidMount","forecast","props","code","console","log","setState","changeFavStat","callback","getFutureforecast","DailyForecasts","undefined","map","day","render","city_name","Headline","Text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Prediction from './Prediction';\r\nimport { requestFiveDayPrediction } from '../weatherAPI';\r\nimport '../styles.css';\r\n\r\nclass WeatherCard extends React.Component {\r\n\r\n  state = { favStat: false, futureData: [], createForecast: false};\r\n\r\n  async componentDidMount() {\r\n    const forecast = await requestFiveDayPrediction(this.props.code);\r\n    console.log(forecast);\r\n    this.setState({\r\n      futureData: forecast,\r\n      createForecast: true\r\n    });\r\n  }\r\n\r\n  changeFavStat() {\r\n    this.setState({ favStat: !this.state.favStat});\r\n    this.props.callback(this.props.code, this.state.favStat);\r\n  }\r\n\r\n  getFutureforecast() {\r\n    console.log(this.state);\r\n    if (this.state.futureData.DailyForecasts !== undefined) {\r\n      return this.state.futureData.DailyForecasts.map( (day) => {\r\n        return <Prediction data={day} />\r\n      }); \r\n    }\r\n    return \"oopsy\";\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(`${this.getFutureforecast()}`)\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Typography>\r\n            {this.props.city_name}\r\n            {this.state.futureData.DailyForecasts}\r\n          </Typography>\r\n          <IconButton className=\"fav-icon\" onClick={() => this.changeFavStat()}>\r\n            {this.state.favStat ? <FavoriteIcon color=\"primary\"/> : <FavoriteBorderIcon color=\"primary\"/>}\r\n          </IconButton>\r\n          <Typography>{this.state.futureData.Headline.Text}</Typography>\r\n          {this.state.createForecast ? this.getFutureforecast() : <Typography>Loading...</Typography>}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}