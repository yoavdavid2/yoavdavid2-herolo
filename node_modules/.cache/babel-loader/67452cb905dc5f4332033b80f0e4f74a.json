{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\Weather\\\\Prediction.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n/*This class is the card of the daily forecast (the one that appears in favorites for each city \r\nand the one that appears five times in the home screen)*/\n\nclass Prediction extends React.Component {\n  findDay(date) {\n    var day = new Date(date * 1000).toUTCString().split(', ')[0];\n    return day;\n  }\n\n  render() {\n    if (this.props.is_from_fav) {\n      var city_name = this.props.name;\n      var temp_C = this.props.data.Temperature.Metric.Value;\n      var temp_F = this.props.data.Temperature.Imperial.Value;\n    } else {\n      var day = this.findDay(this.props.data.EpochDate);\n      var min_temp = this.props.data.Temperature.Minimum.Value;\n      var max_temp = this.props.data.Temperature.Maximum.Value;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.is_from_fav ? `${city_name}` : `${day}`), \" }\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.is_from_fav ? `${temp_C}°C` : `min - ${min_temp}°C`), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.is_from_dav ? `${temp_F}­°F` : `max - ${max_temp}°C`)));\n  }\n\n}\n\nexport default Prediction;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/Weather/Prediction.js"],"names":["React","Grid","Typography","Prediction","Component","findDay","date","day","Date","toUTCString","split","render","props","is_from_fav","city_name","name","temp_C","data","Temperature","Metric","Value","temp_F","Imperial","EpochDate","min_temp","Minimum","max_temp","Maximum","is_from_dav"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA;;;AAGC,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAExCC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,QAAIC,GAAG,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,EAAsBG,WAAtB,GAAoCC,KAApC,CAA0C,IAA1C,EAAgD,CAAhD,CAAV;AACA,WAAOH,GAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,WAAf,EAA4B;AAC1B,UAAIC,SAAS,GAAG,KAAKF,KAAL,CAAWG,IAA3B;AACA,UAAIC,MAAM,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,WAAhB,CAA4BC,MAA5B,CAAmCC,KAAhD;AACA,UAAIC,MAAM,GAAG,KAAKT,KAAL,CAAWK,IAAX,CAAgBC,WAAhB,CAA4BI,QAA5B,CAAqCF,KAAlD;AACD,KAJD,MAIO;AACL,UAAIb,GAAG,GAAG,KAAKF,OAAL,CAAa,KAAKO,KAAL,CAAWK,IAAX,CAAgBM,SAA7B,CAAV;AACA,UAAIC,QAAQ,GAAG,KAAKZ,KAAL,CAAWK,IAAX,CAAgBC,WAAhB,CAA4BO,OAA5B,CAAoCL,KAAnD;AACA,UAAIM,QAAQ,GAAG,KAAKd,KAAL,CAAWK,IAAX,CAAgBC,WAAhB,CAA4BS,OAA5B,CAAoCP,KAAnD;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAKR,KAAL,CAAWC,WAAX,GAA0B,GAAEC,SAAU,EAAtC,GAA2C,GAAEP,GAAI,EAA1F,CADF,QAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKK,KAAL,CAAWC,WAAX,GAA0B,GAAEG,MAAO,IAAnC,GAA0C,SAAQQ,QAAS,IAAxF,CAHF,EAIE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKZ,KAAL,CAAWgB,WAAX,GAA0B,GAAEP,MAAO,KAAnC,GAA2C,SAAQK,QAAS,IAAzF,CAJF,CADF,CADF;AAUD;;AA3BuC;;AA8B1C,eAAevB,UAAf","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/*This class is the card of the daily forecast (the one that appears in favorites for each city \r\nand the one that appears five times in the home screen)*/\r\n\r\n class Prediction extends React.Component {\r\n\r\n  findDay(date) {\r\n    var day = new Date(date * 1000).toUTCString().split(', ')[0];\r\n    return day;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.is_from_fav) {\r\n      var city_name = this.props.name;\r\n      var temp_C = this.props.data.Temperature.Metric.Value;\r\n      var temp_F = this.props.data.Temperature.Imperial.Value;\r\n    } else {\r\n      var day = this.findDay(this.props.data.EpochDate);\r\n      var min_temp = this.props.data.Temperature.Minimum.Value;\r\n      var max_temp = this.props.data.Temperature.Maximum.Value;\r\n    }\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Typography align=\"center\" variant=\"h5\">{this.props.is_from_fav ? `${city_name}` : `${day}`}</Typography> }\r\n          <br />\r\n          <Typography align=\"center\">{ this.props.is_from_fav ? `${temp_C}°C` : `min - ${min_temp}°C` }</Typography>\r\n          <Typography align=\"center\">{ this.props.is_from_dav ? `${temp_F}­°F` : `max - ${max_temp}°C` }</Typography>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Prediction;"]},"metadata":{},"sourceType":"module"}