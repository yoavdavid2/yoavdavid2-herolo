{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\Weather\\\\WeatherDetails.js\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { getCitiesList } from '../../weatherAPI';\nimport WeatherCard from './WeatherCard';\nimport Search from './Search';\nimport '../../styles.css';\n\nclass WeatherDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cityCode: 215854,\n      cityName: 'Tel Aviv',\n      options: []\n    };\n  }\n\n  //Tel Aviv code - default location code\n  handleEnter(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.getCityKey(document.getElementById('loc_input').value);\n    }\n  }\n\n  async setOptions(input) {\n    this.setState({\n      options: await getCitiesList(input)\n    });\n  }\n\n  setInputVal(name) {\n    document.getElementById('loc_input').value = name;\n    this.setState({\n      options: []\n    });\n  }\n\n  async getCityKey(city_name) {\n    var cities_list = await getCitiesList(city_name.split(',')[0]);\n\n    for (var city in cities_list) {\n      var key = parseInt(cities_list[city].split('/')[0], 10);\n      var name = cities_list[city].split('/')[1];\n\n      if (city_name === name) {\n        this.setState({\n          cityCode: key,\n          cityName: name\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(this.state.cityCode);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"loc_input\",\n      label: \"Search Location\",\n      autoComplete: \"off\",\n      onChange: () => this.setOptions(document.getElementById('loc_input').value),\n      onKeyDown: e => this.handleEnter(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Search, {\n      options: this.state.options,\n      callback: val => this.setInputVal(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(WeatherCard, {\n      className: \"detailed\",\n      code: this.state.cityCode,\n      city_name: this.state.cityName,\n      callback: this.props.callback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WeatherDetails;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/Weather/WeatherDetails.js"],"names":["React","FormControl","TextField","getCitiesList","WeatherCard","Search","WeatherDetails","Component","state","cityCode","cityName","options","handleEnter","e","key","preventDefault","getCityKey","document","getElementById","value","setOptions","input","setState","setInputVal","name","city_name","cities_list","split","city","parseInt","render","console","log","val","props","callback"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { getCitiesList } from '../../weatherAPI';\r\nimport WeatherCard from './WeatherCard';\r\nimport Search from './Search';\r\nimport '../../styles.css';\r\n\r\nclass WeatherDetails extends React.Component {\r\n\r\n  state = { cityCode: 215854 , cityName: 'Tel Aviv', options: [] }; //Tel Aviv code - default location code\r\n\r\n  handleEnter(e) {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      this.getCityKey(document.getElementById('loc_input').value);\r\n    }\r\n  }\r\n\r\n  async setOptions(input) {\r\n    this.setState({\r\n      options: await getCitiesList(input)\r\n    });\r\n  }\r\n\r\n  setInputVal(name) {\r\n    document.getElementById('loc_input').value = name;\r\n    this.setState({\r\n      options: []\r\n    });\r\n  }\r\n\r\n  async getCityKey(city_name) {\r\n    var cities_list = await getCitiesList(city_name.split(',')[0]);\r\n    for (var city in cities_list) {\r\n      var key = parseInt(cities_list[city].split('/')[0], 10);\r\n      var name = cities_list[city].split('/')[1];\r\n      if (city_name === name) {\r\n        this.setState({\r\n          cityCode: key, \r\n          cityName: name\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.cityCode);\r\n    return (\r\n      <div>\r\n        <div id=\"test\">\r\n          <FormControl className=\"search-bar\">\r\n            <TextField\r\n              id=\"loc_input\" \r\n              label=\"Search Location\"\r\n              autoComplete=\"off\"\r\n              onChange={() => this.setOptions(document.getElementById('loc_input').value)}\r\n              onKeyDown={(e) => this.handleEnter(e)}\r\n            />\r\n            <Search options={this.state.options} callback={(val) => this.setInputVal(val)}/>\r\n          </FormControl>\r\n        </div>\r\n        <WeatherCard className=\"detailed\" code={this.state.cityCode} city_name={this.state.cityName} callback={this.props.callback}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherDetails;"]},"metadata":{},"sourceType":"module"}