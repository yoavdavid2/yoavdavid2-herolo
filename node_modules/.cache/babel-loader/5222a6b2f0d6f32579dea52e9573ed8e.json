{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport WeatherDetails from './Weather/WeatherDetails';\nimport Favorites from './Favorites';\nimport '../styles.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      is_favorites: false,\n      err_message: '',\n      favorite_list: {}\n    };\n  }\n\n  changeView(is_fav) {\n    if (this.state.is_favorites !== is_fav) {\n      this.setState({\n        is_favorites: !this.state.is_favorites\n      });\n    }\n  }\n\n  changeFav(code, name, is_fav) {\n    const copy_fav_list = _objectSpread({}, this.state.favorite_list);\n\n    if (is_fav) {\n      copy_fav_list[name] = code;\n      this.setState({\n        favorite_list: copy_fav_list\n      });\n    } else {\n      delete copy_fav_list[name];\n      this.setState({\n        favorite_list: copy_fav_list\n      });\n    }\n\n    console.log(this.state.favorite_list);\n  }\n\n  render() {\n    console.log(this.state.favorite_list);\n    return React.createElement(\"div\", {\n      id: \"app-bar-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      className: \"tool-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Herolo Weather Task\"), React.createElement(\"div\", {\n      className: \"buttons-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"app-bar-buttons\",\n      color: \"default\",\n      onClick: () => this.changeView(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Button, {\n      className: \"app-bar-buttons fav-button\",\n      color: \"default\",\n      onClick: () => this.changeView(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Favorites\")))), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.is_favorites ? React.createElement(Favorites, {\n      favorite_list: this.state.favorite_list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : React.createElement(WeatherDetails, {\n      callback: (city_code, city_name, is_fav) => this.changeFav(city_code, city_name, is_fav),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/App.js"],"names":["React","AppBar","Button","Toolbar","Typography","WeatherDetails","Favorites","App","Component","state","is_favorites","err_message","favorite_list","changeView","is_fav","setState","changeFav","code","name","copy_fav_list","console","log","render","city_code","city_name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport WeatherDetails from './Weather/WeatherDetails';\r\nimport Favorites from './Favorites';\r\nimport '../styles.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = { is_favorites: false, err_message: '', favorite_list: { } };\r\n\r\n  changeView(is_fav) {\r\n    if (this.state.is_favorites !== is_fav) {\r\n      this.setState({ is_favorites: !this.state.is_favorites });\r\n    }\r\n  }\r\n\r\n  changeFav(code, name, is_fav) {\r\n    const copy_fav_list = {...this.state.favorite_list};\r\n    \r\n    if (is_fav) {\r\n      copy_fav_list[name] = code;\r\n      this.setState({\r\n        favorite_list: copy_fav_list\r\n      });\r\n    } else {\r\n      delete copy_fav_list[name];\r\n      this.setState({\r\n        favorite_list: copy_fav_list\r\n      })\r\n    }\r\n    console.log(this.state.favorite_list);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.favorite_list);\r\n    return (\r\n      <div id=\"app-bar-div\"> \r\n        <AppBar position=\"relative\">\r\n          <Toolbar className=\"tool-bar\">\r\n            <Typography variant=\"h6\">\r\n              Herolo Weather Task\r\n            </Typography>\r\n            <div className=\"buttons-div\">\r\n              <Button className=\"app-bar-buttons\" color=\"default\" onClick={() => this.changeView(false)}>Home</Button>\r\n              <Button className=\"app-bar-buttons fav-button\" color=\"default\" onClick={() => this.changeView(true)}>Favorites</Button>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <form>\r\n          {this.state.is_favorites ? <Favorites favorite_list={this.state.favorite_list}/> : <WeatherDetails callback={(city_code, city_name, is_fav) => this.changeFav(city_code, city_name, is_fav)}/>}\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}