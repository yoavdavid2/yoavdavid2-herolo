{"ast":null,"code":"import get from 'lodash.get';\nimport createEdgeEffect from './edgeEffect';\nimport createInsetEffect from './insetEffect';\nimport SidebarAdapter from '../adapters/sidebar';\nexport default ((ctx = {}) => {\n  const _ctx$header = ctx.header,\n        header = _ctx$header === void 0 ? {} : _ctx$header,\n        _ctx$sidebar = ctx.sidebar,\n        sidebar = _ctx$sidebar === void 0 ? {} : _ctx$sidebar,\n        _ctx$secondarySidebar = ctx.secondarySidebar,\n        secondarySidebar = _ctx$secondarySidebar === void 0 ? {} : _ctx$secondarySidebar;\n\n  const incrementZIndex = (theme, plus) => ({\n    zIndex: get(theme, 'zIndex.drawer', 1200) + plus\n  });\n\n  const isNotStatic = header.position !== 'static';\n  const isAboveMainSidebar = header.clipped && isNotStatic;\n  const isAboveSubSidebar = header.secondaryClipped && isNotStatic;\n  const isAboveSomeSidebars = isAboveMainSidebar || isAboveSubSidebar;\n  const mainEffect = sidebar.inset ? createInsetEffect(ctx) : createEdgeEffect(ctx);\n  const subEffect = SidebarAdapter.normalize2ndSidebarConfigToFn(secondarySidebar.inset ? createInsetEffect : createEdgeEffect, ctx);\n  return {\n    isEdgeAndInset: sidebar.inset && !secondarySidebar.inset || !sidebar.inset && secondarySidebar.inset,\n    isPrimaryEdge: !sidebar.inset,\n    isPrimaryInset: sidebar.inset,\n    isSecondaryEdge: !secondarySidebar.inset,\n    isSecondaryInset: secondarySidebar.inset,\n    mainEffect,\n    subEffect,\n    mapSecondaryConfig: SidebarAdapter.mapSecondaryConfig,\n    getPrimaryStyle: theme => {\n      if (!header.clipped && header.secondaryClipped) {\n        return incrementZIndex(theme, 20);\n      }\n\n      return undefined;\n    },\n    getSecondaryStyle: theme => {\n      if (header.clipped && !header.secondaryClipped) {\n        return incrementZIndex(theme, 20);\n      }\n\n      return undefined;\n    },\n    getHeaderStyle: theme => {\n      if (isAboveSomeSidebars) {\n        return incrementZIndex(theme, 10);\n      }\n\n      return undefined;\n    }\n  };\n});","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/node_modules/@mui-treasury/layout/models/allSidebars.js"],"names":["get","createEdgeEffect","createInsetEffect","SidebarAdapter","ctx","header","sidebar","secondarySidebar","incrementZIndex","theme","plus","zIndex","isNotStatic","position","isAboveMainSidebar","clipped","isAboveSubSidebar","secondaryClipped","isAboveSomeSidebars","mainEffect","inset","subEffect","normalize2ndSidebarConfigToFn","isEdgeAndInset","isPrimaryEdge","isPrimaryInset","isSecondaryEdge","isSecondaryInset","mapSecondaryConfig","getPrimaryStyle","undefined","getSecondaryStyle","getHeaderStyle"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,gBAAgB,CAACC,GAAG,GAAG,EAAP,KAAc;AAAA,sBAKxBA,GALwB,CAE1BC,MAF0B;AAAA,QAE1BA,MAF0B,4BAEjB,EAFiB;AAAA,uBAKxBD,GALwB,CAG1BE,OAH0B;AAAA,QAG1BA,OAH0B,6BAGhB,EAHgB;AAAA,gCAKxBF,GALwB,CAI1BG,gBAJ0B;AAAA,QAI1BA,gBAJ0B,sCAIP,EAJO;;AAO5B,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,IAAR,MAAkB;AACxCC,IAAAA,MAAM,EAAEX,GAAG,CAACS,KAAD,EAAQ,eAAR,EAAyB,IAAzB,CAAH,GAAoCC;AADJ,GAAlB,CAAxB;;AAIA,QAAME,WAAW,GAAGP,MAAM,CAACQ,QAAP,KAAoB,QAAxC;AACA,QAAMC,kBAAkB,GAAGT,MAAM,CAACU,OAAP,IAAkBH,WAA7C;AACA,QAAMI,iBAAiB,GAAGX,MAAM,CAACY,gBAAP,IAA2BL,WAArD;AACA,QAAMM,mBAAmB,GAAGJ,kBAAkB,IAAIE,iBAAlD;AACA,QAAMG,UAAU,GAAGb,OAAO,CAACc,KAAR,GAAgBlB,iBAAiB,CAACE,GAAD,CAAjC,GAAyCH,gBAAgB,CAACG,GAAD,CAA5E;AACA,QAAMiB,SAAS,GAAGlB,cAAc,CAACmB,6BAAf,CAA6Cf,gBAAgB,CAACa,KAAjB,GAAyBlB,iBAAzB,GAA6CD,gBAA1F,EAA4GG,GAA5G,CAAlB;AACA,SAAO;AACLmB,IAAAA,cAAc,EAAEjB,OAAO,CAACc,KAAR,IAAiB,CAACb,gBAAgB,CAACa,KAAnC,IAA4C,CAACd,OAAO,CAACc,KAAT,IAAkBb,gBAAgB,CAACa,KAD1F;AAELI,IAAAA,aAAa,EAAE,CAAClB,OAAO,CAACc,KAFnB;AAGLK,IAAAA,cAAc,EAAEnB,OAAO,CAACc,KAHnB;AAILM,IAAAA,eAAe,EAAE,CAACnB,gBAAgB,CAACa,KAJ9B;AAKLO,IAAAA,gBAAgB,EAAEpB,gBAAgB,CAACa,KAL9B;AAMLD,IAAAA,UANK;AAOLE,IAAAA,SAPK;AAQLO,IAAAA,kBAAkB,EAAEzB,cAAc,CAACyB,kBAR9B;AASLC,IAAAA,eAAe,EAAEpB,KAAK,IAAI;AACxB,UAAI,CAACJ,MAAM,CAACU,OAAR,IAAmBV,MAAM,CAACY,gBAA9B,EAAgD;AAC9C,eAAOT,eAAe,CAACC,KAAD,EAAQ,EAAR,CAAtB;AACD;;AAED,aAAOqB,SAAP;AACD,KAfI;AAgBLC,IAAAA,iBAAiB,EAAEtB,KAAK,IAAI;AAC1B,UAAIJ,MAAM,CAACU,OAAP,IAAkB,CAACV,MAAM,CAACY,gBAA9B,EAAgD;AAC9C,eAAOT,eAAe,CAACC,KAAD,EAAQ,EAAR,CAAtB;AACD;;AAED,aAAOqB,SAAP;AACD,KAtBI;AAuBLE,IAAAA,cAAc,EAAEvB,KAAK,IAAI;AACvB,UAAIS,mBAAJ,EAAyB;AACvB,eAAOV,eAAe,CAACC,KAAD,EAAQ,EAAR,CAAtB;AACD;;AAED,aAAOqB,SAAP;AACD;AA7BI,GAAP;AA+BD,CAhDD","sourcesContent":["import get from 'lodash.get';\nimport createEdgeEffect from './edgeEffect';\nimport createInsetEffect from './insetEffect';\nimport SidebarAdapter from '../adapters/sidebar';\nexport default ((ctx = {}) => {\n  const {\n    header = {},\n    sidebar = {},\n    secondarySidebar = {}\n  } = ctx;\n\n  const incrementZIndex = (theme, plus) => ({\n    zIndex: get(theme, 'zIndex.drawer', 1200) + plus\n  });\n\n  const isNotStatic = header.position !== 'static';\n  const isAboveMainSidebar = header.clipped && isNotStatic;\n  const isAboveSubSidebar = header.secondaryClipped && isNotStatic;\n  const isAboveSomeSidebars = isAboveMainSidebar || isAboveSubSidebar;\n  const mainEffect = sidebar.inset ? createInsetEffect(ctx) : createEdgeEffect(ctx);\n  const subEffect = SidebarAdapter.normalize2ndSidebarConfigToFn(secondarySidebar.inset ? createInsetEffect : createEdgeEffect, ctx);\n  return {\n    isEdgeAndInset: sidebar.inset && !secondarySidebar.inset || !sidebar.inset && secondarySidebar.inset,\n    isPrimaryEdge: !sidebar.inset,\n    isPrimaryInset: sidebar.inset,\n    isSecondaryEdge: !secondarySidebar.inset,\n    isSecondaryInset: secondarySidebar.inset,\n    mainEffect,\n    subEffect,\n    mapSecondaryConfig: SidebarAdapter.mapSecondaryConfig,\n    getPrimaryStyle: theme => {\n      if (!header.clipped && header.secondaryClipped) {\n        return incrementZIndex(theme, 20);\n      }\n\n      return undefined;\n    },\n    getSecondaryStyle: theme => {\n      if (header.clipped && !header.secondaryClipped) {\n        return incrementZIndex(theme, 20);\n      }\n\n      return undefined;\n    },\n    getHeaderStyle: theme => {\n      if (isAboveSomeSidebars) {\n        return incrementZIndex(theme, 10);\n      }\n\n      return undefined;\n    }\n  };\n});"]},"metadata":{},"sourceType":"module"}