{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport useScreenComparison from './useScreenComparison';\nexport default ((ctx = {}) => {\n  const insetHiddenBreakpoint = ctx.insetHiddenBreakpoint,\n        insetHiddenDisabled = ctx.insetHiddenDisabled,\n        sidebar = ctx.sidebar;\n  const values = useScreenComparison(insetHiddenBreakpoint);\n  return _extends({}, values, {\n    insetHiddenDisabled,\n    displayedAboveBreakpoint: sidebar.inset && values.isTargetAbove && !insetHiddenDisabled,\n    displayedBelowBreakpoint: sidebar.inset && values.isTargetDown && !insetHiddenDisabled\n  });\n});","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/node_modules/@mui-treasury/layout/hooks/useInsetBreakpoint.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useScreenComparison","ctx","insetHiddenBreakpoint","insetHiddenDisabled","sidebar","values","displayedAboveBreakpoint","inset","isTargetAbove","displayedBelowBreakpoint","isTargetDown"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,mBAAP,MAAgC,uBAAhC;AACA,gBAAgB,CAACC,GAAG,GAAG,EAAP,KAAc;AAAA,QAE1BC,qBAF0B,GAKxBD,GALwB,CAE1BC,qBAF0B;AAAA,QAG1BC,mBAH0B,GAKxBF,GALwB,CAG1BE,mBAH0B;AAAA,QAI1BC,OAJ0B,GAKxBH,GALwB,CAI1BG,OAJ0B;AAM5B,QAAMC,MAAM,GAAGL,mBAAmB,CAACE,qBAAD,CAAlC;AACA,SAAOf,QAAQ,CAAC,EAAD,EAAKkB,MAAL,EAAa;AAC1BF,IAAAA,mBAD0B;AAE1BG,IAAAA,wBAAwB,EAAEF,OAAO,CAACG,KAAR,IAAiBF,MAAM,CAACG,aAAxB,IAAyC,CAACL,mBAF1C;AAG1BM,IAAAA,wBAAwB,EAAEL,OAAO,CAACG,KAAR,IAAiBF,MAAM,CAACK,YAAxB,IAAwC,CAACP;AAHzC,GAAb,CAAf;AAKD,CAZD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport useScreenComparison from './useScreenComparison';\nexport default ((ctx = {}) => {\n  const {\n    insetHiddenBreakpoint,\n    insetHiddenDisabled,\n    sidebar\n  } = ctx;\n  const values = useScreenComparison(insetHiddenBreakpoint);\n  return _extends({}, values, {\n    insetHiddenDisabled,\n    displayedAboveBreakpoint: sidebar.inset && values.isTargetAbove && !insetHiddenDisabled,\n    displayedBelowBreakpoint: sidebar.inset && values.isTargetDown && !insetHiddenDisabled\n  });\n});"]},"metadata":{},"sourceType":"module"}