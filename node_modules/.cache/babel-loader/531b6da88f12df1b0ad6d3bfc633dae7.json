{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport debounce from 'lodash.debounce';\nimport get from 'lodash.get';\nimport { useCallback, useEffect, useState } from 'react';\nimport useWindow from './useWindow';\nimport someIs from '../utils/someIs';\nimport useEventListener from './useEventListener';\nexport default (({\n  sidebar = {},\n  clipped,\n  header: {\n    position,\n    offsetHeight\n  } = {},\n  heightAdjustmentSpeed = 144,\n  heightAdjustmentDisabled = false\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        height = _useState2[0],\n        setHeight = _useState2[1];\n\n  const _useWindow = useWindow(),\n        iWindow = _useWindow.iWindow;\n\n  useEffect(() => {\n    if (typeof offsetHeight === 'number') {\n      setHeight(offsetHeight);\n    }\n  }, [offsetHeight]);\n  const handler = useCallback(debounce(() => {\n    // Update height\n    if (typeof offsetHeight === 'number') {\n      const offset = offsetHeight - iWindow.scrollY;\n      setHeight(offset < 0 ? 0 : offset);\n    }\n  }, heightAdjustmentSpeed, {\n    leading: true,\n    trailing: true\n  }), [setHeight, offsetHeight, iWindow]);\n  useEventListener('scroll', handler);\n  if (heightAdjustmentDisabled) return 0; // disabled by user.\n\n  if (sidebar.inset) {\n    // inset sidebar\n    const insetPosition = get(sidebar, 'insetProps.position');\n\n    if (someIs(['fixed', 'sticky'], position) && someIs(['fixed', 'sticky'], insetPosition) && !(position === 'sticky' && insetPosition === 'sticky')) {\n      return offsetHeight;\n    }\n\n    if (someIs(['absolute', 'relative', 'static'], position) && someIs(['fixed', 'sticky'], insetPosition) && !(position === 'relative' && insetPosition === 'sticky')) {\n      return height;\n    }\n\n    return 0;\n  }\n\n  if (sidebar.variant === 'temporary') return 0;\n\n  if (!clipped) {\n    // do not run the effect below if behavior is not right.\n    return 0;\n  }\n\n  if (clipped && someIs(['sticky', 'fixed'], position)) {\n    return offsetHeight;\n  }\n\n  return height;\n});","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/node_modules/@mui-treasury/layout/hooks/useHeightAdjustment.js"],"names":["debounce","get","useCallback","useEffect","useState","useWindow","someIs","useEventListener","sidebar","clipped","header","position","offsetHeight","heightAdjustmentSpeed","heightAdjustmentDisabled","height","setHeight","iWindow","handler","offset","scrollY","leading","trailing","inset","insetPosition","variant"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,gBAAgB,CAAC;AACfC,EAAAA,OAAO,GAAG,EADK;AAEfC,EAAAA,OAFe;AAGfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QADM;AAENC,IAAAA;AAFM,MAGJ,EANW;AAOfC,EAAAA,qBAAqB,GAAG,GAPT;AAQfC,EAAAA,wBAAwB,GAAG;AARZ,CAAD,KASV;AAAA,oBACwBV,QAAQ,CAAC,CAAD,CADhC;AAAA;AAAA,QACGW,MADH;AAAA,QACWC,SADX;;AAAA,qBAIAX,SAAS,EAJT;AAAA,QAGFY,OAHE,cAGFA,OAHE;;AAKJd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,OAAOS,YAAP,KAAwB,QAA5B,EAAsC;AACpCI,MAAAA,SAAS,CAACJ,YAAD,CAAT;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAKA,QAAMM,OAAO,GAAGhB,WAAW,CAACF,QAAQ,CAAC,MAAM;AACzC;AACA,QAAI,OAAOY,YAAP,KAAwB,QAA5B,EAAsC;AACpC,YAAMO,MAAM,GAAGP,YAAY,GAAGK,OAAO,CAACG,OAAtC;AACAJ,MAAAA,SAAS,CAACG,MAAM,GAAG,CAAT,GAAa,CAAb,GAAiBA,MAAlB,CAAT;AACD;AACF,GANmC,EAMjCN,qBANiC,EAMV;AACxBQ,IAAAA,OAAO,EAAE,IADe;AAExBC,IAAAA,QAAQ,EAAE;AAFc,GANU,CAAT,EASvB,CAACN,SAAD,EAAYJ,YAAZ,EAA0BK,OAA1B,CATuB,CAA3B;AAUAV,EAAAA,gBAAgB,CAAC,QAAD,EAAWW,OAAX,CAAhB;AACA,MAAIJ,wBAAJ,EAA8B,OAAO,CAAP,CArB1B,CAqBoC;;AAExC,MAAIN,OAAO,CAACe,KAAZ,EAAmB;AACjB;AACA,UAAMC,aAAa,GAAGvB,GAAG,CAACO,OAAD,EAAU,qBAAV,CAAzB;;AAEA,QAAIF,MAAM,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsBK,QAAtB,CAAN,IAAyCL,MAAM,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsBkB,aAAtB,CAA/C,IAAuF,EAAEb,QAAQ,KAAK,QAAb,IAAyBa,aAAa,KAAK,QAA7C,CAA3F,EAAmJ;AACjJ,aAAOZ,YAAP;AACD;;AAED,QAAIN,MAAM,CAAC,CAAC,UAAD,EAAa,UAAb,EAAyB,QAAzB,CAAD,EAAqCK,QAArC,CAAN,IAAwDL,MAAM,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsBkB,aAAtB,CAA9D,IAAsG,EAAEb,QAAQ,KAAK,UAAb,IAA2Ba,aAAa,KAAK,QAA/C,CAA1G,EAAoK;AAClK,aAAOT,MAAP;AACD;;AAED,WAAO,CAAP;AACD;;AAED,MAAIP,OAAO,CAACiB,OAAR,KAAoB,WAAxB,EAAqC,OAAO,CAAP;;AAErC,MAAI,CAAChB,OAAL,EAAc;AACZ;AACA,WAAO,CAAP;AACD;;AAED,MAAIA,OAAO,IAAIH,MAAM,CAAC,CAAC,QAAD,EAAW,OAAX,CAAD,EAAsBK,QAAtB,CAArB,EAAsD;AACpD,WAAOC,YAAP;AACD;;AAED,SAAOG,MAAP;AACD,CA3DD","sourcesContent":["import debounce from 'lodash.debounce';\nimport get from 'lodash.get';\nimport { useCallback, useEffect, useState } from 'react';\nimport useWindow from './useWindow';\nimport someIs from '../utils/someIs';\nimport useEventListener from './useEventListener';\nexport default (({\n  sidebar = {},\n  clipped,\n  header: {\n    position,\n    offsetHeight\n  } = {},\n  heightAdjustmentSpeed = 144,\n  heightAdjustmentDisabled = false\n}) => {\n  const [height, setHeight] = useState(0);\n  const {\n    iWindow\n  } = useWindow();\n  useEffect(() => {\n    if (typeof offsetHeight === 'number') {\n      setHeight(offsetHeight);\n    }\n  }, [offsetHeight]);\n  const handler = useCallback(debounce(() => {\n    // Update height\n    if (typeof offsetHeight === 'number') {\n      const offset = offsetHeight - iWindow.scrollY;\n      setHeight(offset < 0 ? 0 : offset);\n    }\n  }, heightAdjustmentSpeed, {\n    leading: true,\n    trailing: true\n  }), [setHeight, offsetHeight, iWindow]);\n  useEventListener('scroll', handler);\n  if (heightAdjustmentDisabled) return 0; // disabled by user.\n\n  if (sidebar.inset) {\n    // inset sidebar\n    const insetPosition = get(sidebar, 'insetProps.position');\n\n    if (someIs(['fixed', 'sticky'], position) && someIs(['fixed', 'sticky'], insetPosition) && !(position === 'sticky' && insetPosition === 'sticky')) {\n      return offsetHeight;\n    }\n\n    if (someIs(['absolute', 'relative', 'static'], position) && someIs(['fixed', 'sticky'], insetPosition) && !(position === 'relative' && insetPosition === 'sticky')) {\n      return height;\n    }\n\n    return 0;\n  }\n\n  if (sidebar.variant === 'temporary') return 0;\n\n  if (!clipped) {\n    // do not run the effect below if behavior is not right.\n    return 0;\n  }\n\n  if (clipped && someIs(['sticky', 'fixed'], position)) {\n    return offsetHeight;\n  }\n\n  return height;\n});"]},"metadata":{},"sourceType":"module"}