{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst SidebarAdapter = () => ({});\n\nSidebarAdapter.mapSecondaryConfig = (_ref = {}) => {\n  let secondarySidebar = _ref.secondarySidebar,\n      secondaryOpened = _ref.secondaryOpened,\n      setSecondaryOpened = _ref.setSecondaryOpened,\n      secondaryCollapsed = _ref.secondaryCollapsed,\n      setSecondaryCollapsed = _ref.setSecondaryCollapsed,\n      secondaryClipped = _ref.secondaryClipped,\n      secondaryAutoCollapseDisabled = _ref.secondaryAutoCollapseDisabled,\n      secondaryCollapseBreakpoint = _ref.secondaryCollapseBreakpoint,\n      secondaryInsetHiddenBreakpoint = _ref.secondaryInsetHiddenBreakpoint,\n      secondaryInsetHiddenDisabled = _ref.secondaryInsetHiddenDisabled,\n      getSecondarySidebarWidth = _ref.getSecondarySidebarWidth,\n      getSecondarySidebarGap = _ref.getSecondarySidebarGap,\n      getSecondarySidebarZIndex = _ref.getSecondarySidebarZIndex,\n      getSecondaryInsetSidebarStyle = _ref.getSecondaryInsetSidebarStyle,\n      getSecondaryInsetSidebarBodyStyle = _ref.getSecondaryInsetSidebarBodyStyle,\n      secondaryPersistentBehavior = _ref.secondaryPersistentBehavior,\n      secondaryInsetBehavior = _ref.secondaryInsetBehavior,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"secondarySidebar\", \"secondaryOpened\", \"setSecondaryOpened\", \"secondaryCollapsed\", \"setSecondaryCollapsed\", \"secondaryClipped\", \"secondaryAutoCollapseDisabled\", \"secondaryCollapseBreakpoint\", \"secondaryInsetHiddenBreakpoint\", \"secondaryInsetHiddenDisabled\", \"getSecondarySidebarWidth\", \"getSecondarySidebarGap\", \"getSecondarySidebarZIndex\", \"getSecondaryInsetSidebarStyle\", \"getSecondaryInsetSidebarBodyStyle\", \"secondaryPersistentBehavior\", \"secondaryInsetBehavior\"]);\n\n  return _extends({}, rest, {\n    sidebar: secondarySidebar,\n    opened: secondaryOpened,\n    collapsed: secondaryCollapsed,\n    clipped: secondaryClipped,\n    setOpened: setSecondaryOpened,\n    setCollapsed: setSecondaryCollapsed,\n    autoCollapseDisabled: secondaryAutoCollapseDisabled,\n    collapseBreakpoint: secondaryCollapseBreakpoint,\n    insetHiddenBreakpoint: secondaryInsetHiddenBreakpoint,\n    insetHiddenDisabled: secondaryInsetHiddenDisabled,\n    getSidebarWidth: getSecondarySidebarWidth,\n    getSidebarGap: getSecondarySidebarGap,\n    getSidebarZIndex: getSecondarySidebarZIndex,\n    getInsetSidebarStyle: getSecondaryInsetSidebarStyle,\n    getInsetSidebarBodyStyle: getSecondaryInsetSidebarBodyStyle,\n    // header, footer, content\n    persistentBehavior: secondaryPersistentBehavior,\n    insetBehavior: secondaryInsetBehavior\n  });\n};\n\nSidebarAdapter.normalize2ndSidebarConfigToFn = (fn, ctx) => fn(SidebarAdapter.mapSecondaryConfig(ctx));\n\nexport default SidebarAdapter;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/node_modules/@mui-treasury/layout/adapters/sidebar.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","SidebarAdapter","mapSecondaryConfig","_ref","secondarySidebar","secondaryOpened","setSecondaryOpened","secondaryCollapsed","setSecondaryCollapsed","secondaryClipped","secondaryAutoCollapseDisabled","secondaryCollapseBreakpoint","secondaryInsetHiddenBreakpoint","secondaryInsetHiddenDisabled","getSecondarySidebarWidth","getSecondarySidebarGap","getSecondarySidebarZIndex","getSecondaryInsetSidebarStyle","getSecondaryInsetSidebarBodyStyle","secondaryPersistentBehavior","secondaryInsetBehavior","rest","sidebar","opened","collapsed","clipped","setOpened","setCollapsed","autoCollapseDisabled","collapseBreakpoint","insetHiddenBreakpoint","insetHiddenDisabled","getSidebarWidth","getSidebarGap","getSidebarZIndex","getInsetSidebarStyle","getInsetSidebarBodyStyle","persistentBehavior","insetBehavior","normalize2ndSidebarConfigToFn","fn","ctx"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst SidebarAdapter = () => ({});\n\nSidebarAdapter.mapSecondaryConfig = (_ref = {}) => {\n  let {\n    secondarySidebar,\n    secondaryOpened,\n    setSecondaryOpened,\n    secondaryCollapsed,\n    setSecondaryCollapsed,\n    secondaryClipped,\n    secondaryAutoCollapseDisabled,\n    secondaryCollapseBreakpoint,\n    secondaryInsetHiddenBreakpoint,\n    secondaryInsetHiddenDisabled,\n    getSecondarySidebarWidth,\n    getSecondarySidebarGap,\n    getSecondarySidebarZIndex,\n    getSecondaryInsetSidebarStyle,\n    getSecondaryInsetSidebarBodyStyle,\n    // header, footer, content\n    secondaryPersistentBehavior,\n    secondaryInsetBehavior\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"secondarySidebar\", \"secondaryOpened\", \"setSecondaryOpened\", \"secondaryCollapsed\", \"setSecondaryCollapsed\", \"secondaryClipped\", \"secondaryAutoCollapseDisabled\", \"secondaryCollapseBreakpoint\", \"secondaryInsetHiddenBreakpoint\", \"secondaryInsetHiddenDisabled\", \"getSecondarySidebarWidth\", \"getSecondarySidebarGap\", \"getSecondarySidebarZIndex\", \"getSecondaryInsetSidebarStyle\", \"getSecondaryInsetSidebarBodyStyle\", \"secondaryPersistentBehavior\", \"secondaryInsetBehavior\"]);\n\n  return _extends({}, rest, {\n    sidebar: secondarySidebar,\n    opened: secondaryOpened,\n    collapsed: secondaryCollapsed,\n    clipped: secondaryClipped,\n    setOpened: setSecondaryOpened,\n    setCollapsed: setSecondaryCollapsed,\n    autoCollapseDisabled: secondaryAutoCollapseDisabled,\n    collapseBreakpoint: secondaryCollapseBreakpoint,\n    insetHiddenBreakpoint: secondaryInsetHiddenBreakpoint,\n    insetHiddenDisabled: secondaryInsetHiddenDisabled,\n    getSidebarWidth: getSecondarySidebarWidth,\n    getSidebarGap: getSecondarySidebarGap,\n    getSidebarZIndex: getSecondarySidebarZIndex,\n    getInsetSidebarStyle: getSecondaryInsetSidebarStyle,\n    getInsetSidebarBodyStyle: getSecondaryInsetSidebarBodyStyle,\n    // header, footer, content\n    persistentBehavior: secondaryPersistentBehavior,\n    insetBehavior: secondaryInsetBehavior\n  });\n};\n\nSidebarAdapter.normalize2ndSidebarConfigToFn = (fn, ctx) => fn(SidebarAdapter.mapSecondaryConfig(ctx));\n\nexport default SidebarAdapter;"]},"metadata":{},"sourceType":"module"}