{"ast":null,"code":"import useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from './useMediaQuery';\n\nfunction useScreen(initialValue, options) {\n  const theme = useTheme();\n  const isXs = useMediaQuery(theme.breakpoints.up('xs'), options);\n  const isSm = useMediaQuery(theme.breakpoints.up('sm'), options);\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), options);\n  const isLg = useMediaQuery(theme.breakpoints.up('lg'), options);\n  const isXl = useMediaQuery(theme.breakpoints.up('xl'), options);\n  if (isXl) return 'xl';\n  if (isLg) return 'lg';\n  if (isMd) return 'md';\n  if (isSm) return 'sm';\n  if (isXs) return 'xs';\n  return initialValue;\n}\n\nexport default useScreen;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/node_modules/@mui-treasury/layout/hooks/useScreen.js"],"names":["useTheme","useMediaQuery","useScreen","initialValue","options","theme","isXs","breakpoints","up","isSm","isMd","isLg","isXl"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mCAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAiCC,OAAjC,EAA0C;AACxC,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACA,QAAMM,IAAI,GAAGL,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6BJ,OAA7B,CAA1B;AACA,QAAMK,IAAI,GAAGR,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6BJ,OAA7B,CAA1B;AACA,QAAMM,IAAI,GAAGT,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6BJ,OAA7B,CAA1B;AACA,QAAMO,IAAI,GAAGV,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6BJ,OAA7B,CAA1B;AACA,QAAMQ,IAAI,GAAGX,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6BJ,OAA7B,CAA1B;AACA,MAAIQ,IAAJ,EAAU,OAAO,IAAP;AACV,MAAID,IAAJ,EAAU,OAAO,IAAP;AACV,MAAID,IAAJ,EAAU,OAAO,IAAP;AACV,MAAID,IAAJ,EAAU,OAAO,IAAP;AACV,MAAIH,IAAJ,EAAU,OAAO,IAAP;AACV,SAAOH,YAAP;AACD;;AAED,eAAeD,SAAf","sourcesContent":["import useTheme from '@material-ui/core/styles/useTheme';\nimport useMediaQuery from './useMediaQuery';\n\nfunction useScreen(initialValue, options) {\n  const theme = useTheme();\n  const isXs = useMediaQuery(theme.breakpoints.up('xs'), options);\n  const isSm = useMediaQuery(theme.breakpoints.up('sm'), options);\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), options);\n  const isLg = useMediaQuery(theme.breakpoints.up('lg'), options);\n  const isXl = useMediaQuery(theme.breakpoints.up('xl'), options);\n  if (isXl) return 'xl';\n  if (isLg) return 'lg';\n  if (isMd) return 'md';\n  if (isSm) return 'sm';\n  if (isXs) return 'xs';\n  return initialValue;\n}\n\nexport default useScreen;"]},"metadata":{},"sourceType":"module"}