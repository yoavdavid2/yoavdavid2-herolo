{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\Favorites.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Prediction from './Weather/Prediction';\nimport { requestWeatherDetails } from '../weatherAPI';\nimport '../styles.css';\nimport { Typography } from '@material-ui/core';\n\nclass Favorites extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fav_data: {\n        'Tel Aviv': 215854,\n        'London': 238238,\n        'Bucharest': 287430\n      }\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.isEmpty(this.props.favorite_list)) {\n      Object.keys(this.props.favorite_list).map(async (city_code, index) => {\n        const copy_fav_data = _objectSpread({}, this.state.fav_data);\n\n        copy_fav_data[`${city_code}`] = await requestWeatherDetails(this.props.favorite_list[city_code]);\n        this.setState({\n          fav_data: copy_fav_data\n        });\n      });\n    }\n  }\n\n  isEmpty(obj) {\n    if (obj == null) return true;\n    if (obj.length > 0) return false;\n    if (obj.length === 0) return true;\n    if (typeof obj !== \"object\") return true;\n\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) return false;\n    }\n\n    return true;\n  }\n\n  async getFavList(city_code) {\n    const city_data = await requestWeatherDetails(city_code);\n    console.log(city_data);\n    return city_data;\n  }\n\n  getFavData() {\n    console.log(Object.keys(this.state.fav_data).length);\n\n    if (this.state.fav_data && Object.keys(this.state.fav_data).length) {\n      return React.createElement(\"div\", {\n        className: \"card-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, Object.keys(this.state.fav_data).map((city_name, index) => {\n        return React.createElement(Card, {\n          className: \"card\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Prediction, {\n          name: city_name,\n          data: this.state.fav_data[city_name][0],\n          is_from_fav: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"card-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"No Favorites Yet\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.getFavData());\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/Favorites.js"],"names":["React","Card","Prediction","requestWeatherDetails","Typography","Favorites","Component","state","fav_data","componentDidMount","isEmpty","props","favorite_list","Object","keys","map","city_code","index","copy_fav_data","setState","obj","length","key","hasOwnProperty","call","getFavList","city_data","console","log","getFavData","city_name","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Prediction from './Weather/Prediction';\r\nimport { requestWeatherDetails } from '../weatherAPI';\r\nimport '../styles.css';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass Favorites extends React.Component{\r\n  \r\n  state = { fav_data: { 'Tel Aviv': 215854, 'London': 238238, 'Bucharest': 287430} };\r\n\r\n  async componentDidMount() {\r\n    if (!this.isEmpty(this.props.favorite_list)) {\r\n      Object.keys(this.props.favorite_list).map(async (city_code, index) => {\r\n        const copy_fav_data = { ...this.state.fav_data };\r\n        copy_fav_data[`${city_code}`] = await requestWeatherDetails(this.props.favorite_list[city_code]);\r\n        this.setState({\r\n          fav_data: copy_fav_data\r\n        }) ;\r\n      });\r\n    }\r\n  }\r\n\r\n  isEmpty(obj) {\r\n    if (obj == null) return true;\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n    if (typeof obj !== \"object\") return true;\r\n    for (var key in obj) {\r\n      if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async getFavList(city_code) {\r\n    const city_data = await requestWeatherDetails(city_code)\r\n    console.log(city_data);\r\n    return city_data;\r\n  }\r\n\r\n  getFavData() {\r\n    console.log(Object.keys(this.state.fav_data).length);\r\n    if (this.state.fav_data && Object.keys(this.state.fav_data).length) {\r\n      return (\r\n        <div className=\"card-div\">\r\n          { Object.keys(this.state.fav_data).map((city_name ,index) => {\r\n            return (\r\n              <Card className=\"card\" key={index}>\r\n                <Prediction name={city_name} data={this.state.fav_data[city_name][0]} is_from_fav={true}/>\r\n              </Card>\r\n            );\r\n          })} \r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"card-div\">\r\n        <Typography>\r\n          No Favorites Yet\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getFavData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;"]},"metadata":{},"sourceType":"module"}