{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\Weather\\\\WeatherCard.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport Typography from '@material-ui/core/Typography';\nimport Prediction from './Prediction';\nimport { requestFiveDayPrediction } from '../../weatherAPI';\nimport '../../styles.css';\n\nclass WeatherCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favStat: false,\n      futureData: [],\n      createForecast: false\n    };\n  }\n\n  async componentDidMount() {\n    const forecast = await requestFiveDayPrediction(this.props.code);\n    var create = forecast.Headline ? true : false;\n    this.setState({\n      futureData: forecast,\n      createForecast: create\n    });\n  }\n\n  changeFavStat() {\n    this.setState({\n      favStat: !this.state.favStat\n    });\n    console.log(this.state.favStat);\n    this.props.callback(this.props.code, this.props.city_name, this.state.favStat);\n  }\n\n  getFutureforecast() {\n    if (this.state.futureData.DailyForecasts !== undefined) {\n      return React.createElement(\"div\", {\n        className: \"card-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.state.futureData.DailyForecasts.map((day, index) => {\n        return React.createElement(Card, {\n          className: \"card\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Prediction, {\n          data: day,\n          is_from_fav: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      }));\n    }\n\n    return \"oopsy\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"credentials\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      className: \"details_tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.city_name), React.createElement(IconButton, {\n      className: \"fav-icon\",\n      onClick: () => this.changeFavStat(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.favStat ? React.createElement(FavoriteIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : React.createElement(FavoriteBorderIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.createForecast ? this.state.futureData.Headline.Text : null)), this.state.createForecast ? this.getFutureforecast() : React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/Weather/WeatherCard.js"],"names":["React","Card","IconButton","FavoriteIcon","FavoriteBorderIcon","Typography","Prediction","requestFiveDayPrediction","WeatherCard","Component","state","favStat","futureData","createForecast","componentDidMount","forecast","props","code","create","Headline","setState","changeFavStat","console","log","callback","city_name","getFutureforecast","DailyForecasts","undefined","map","day","index","render","Text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Prediction from './Prediction';\r\nimport { requestFiveDayPrediction } from '../../weatherAPI';\r\nimport '../../styles.css';\r\n\r\nclass WeatherCard extends React.Component {\r\n\r\n  state = { favStat: false, futureData: [], createForecast: false};\r\n\r\n  async componentDidMount() {\r\n    const forecast = await requestFiveDayPrediction(this.props.code);\r\n    var create = forecast.Headline ? true : false\r\n    this.setState({\r\n      futureData: forecast,\r\n      createForecast: create\r\n    });\r\n  }\r\n\r\n  changeFavStat() {\r\n    this.setState({ favStat: !this.state.favStat});\r\n    console.log(this.state.favStat);\r\n    this.props.callback(this.props.code, this.props.city_name ,this.state.favStat);\r\n  }\r\n\r\n  getFutureforecast() {\r\n    if (this.state.futureData.DailyForecasts !== undefined) {\r\n      return (\r\n        <div className=\"card-div\">\r\n          { this.state.futureData.DailyForecasts.map((day, index) => {\r\n          return (\r\n            <Card className=\"card\" key={index}>\r\n              <Prediction data={day} is_from_fav={false}/>\r\n            </Card>\r\n          );\r\n          })} \r\n        </div>\r\n      );\r\n    }\r\n    return \"oopsy\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <div id=\"credentials\">\r\n            <Typography variant=\"h6\" className=\"details_tag\">\r\n              {this.props.city_name}\r\n              {/* {this.state.futureData.DailyForecasts.Temperature.Maximum.Value} */}\r\n            </Typography>\r\n            <IconButton className=\"fav-icon\" onClick={() => this.changeFavStat()}>\r\n              {this.state.favStat ? <FavoriteIcon color=\"primary\"/> : <FavoriteBorderIcon color=\"primary\"/>}\r\n            </IconButton>\r\n            <Typography align=\"center\" variant=\"h5\" >{ this.state.createForecast ? this.state.futureData.Headline.Text : null }</Typography>\r\n          </div>\r\n          {this.state.createForecast ? this.getFutureforecast() : <Typography>Loading...</Typography>}\r\n        </Card>          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}