{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, error => {\n      this.setState({\n        errorMessage: error.message\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"My component was rendered to the screen\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"My component was just updated - it rerendered\");\n  }\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    } else if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading\");\n    }\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","message","componentDidMount","console","log","componentDidUpdate","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAAb;AACAC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACGC,QAAD,IAAc;AACZ,WAAKC,QAAL,CAAc;AAAEP,QAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,OAAd;AACD,KAHH,EAIGC,KAAD,IAAW;AACT,WAAKH,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAES,KAAK,CAACC;AAAtB,OAAd;AACD,KANH;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKjB,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACD,KAFD,MAEO,IAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AACrD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACD,KAFM,MAEA;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;AACF;;AA/B+B;;AAkClCN,QAAQ,CAACsB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAxB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { lat: null, errorMessage: '' }; \r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        this.setState({ lat: position.coords.latitude });\r\n      },\r\n      (error) => {\r\n        this.setState({ errorMessage: error.message });\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"My component was rendered to the screen\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"My component was just updated - it rerendered\");\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error: {this.state.errorMessage}</div>\r\n    } else if (!this.state.errorMessage && this.state.lat) {\r\n      return <div>Latitude: {this.state.lat}</div>\r\n    } else {\r\n      return <div>Loading</div>\r\n    }\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />,document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}