{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\WeatherCard.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport Typography from '@material-ui/core/Typography';\nimport { requestFiveDayPrediction } from '../weatherAPI';\nimport '../styles.css';\n\nclass WeatherCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favStat: false,\n      futureData: []\n    };\n  }\n\n  async componentDidMount() {\n    const forecast = await requestFiveDayPrediction(this.props.code);\n    console.log(forecast);\n    this.setState({\n      futureData: forecast\n    });\n    console.log(this.state.futureData.DailyForecasts);\n  }\n\n  changeFavStat() {\n    this.setState({\n      favStat: !this.state.favStat\n    });\n    this.props.callback(this.props.code, this.state.favStat);\n  }\n\n  getFutureforecast() {\n    if (!this.state.futureData.length) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return this.state.futureData.forEach(day => {\n      return day.Temperature.Minimum.value;\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"City_Name Temperature \"), React.createElement(IconButton, {\n      className: \"fav-icon\",\n      onClick: () => this.changeFavStat(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.favStat ? React.createElement(FavoriteIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : React.createElement(FavoriteBorderIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), this.getFutureforecast()));\n  }\n\n}\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/WeatherCard.js"],"names":["React","Card","IconButton","FavoriteIcon","FavoriteBorderIcon","Typography","requestFiveDayPrediction","WeatherCard","Component","state","favStat","futureData","componentDidMount","forecast","props","code","console","log","setState","DailyForecasts","changeFavStat","callback","getFutureforecast","length","forEach","day","Temperature","Minimum","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,wBAAT,QAAyC,eAAzC;AACA,OAAO,eAAP;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAFgC;AAAA;;AAIxC,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMP,wBAAwB,CAAC,KAAKQ,KAAL,CAAWC,IAAZ,CAA/C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,SAAKK,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAEE;AADA,KAAd;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,UAAX,CAAsBQ,cAAlC;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,SAAKF,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,KAAd;AACA,SAAKI,KAAL,CAAWO,QAAX,CAAoB,KAAKP,KAAL,CAAWC,IAA/B,EAAqC,KAAKN,KAAL,CAAWC,OAAhD;AACD;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKb,KAAL,CAAWE,UAAX,CAAsBY,MAA3B,EAAmC;AACjC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,WAAO,KAAKd,KAAL,CAAWE,UAAX,CAAsBa,OAAtB,CAA8BC,GAAG,IAAI;AAC1C,aAAOA,GAAG,CAACC,WAAJ,CAAgBC,OAAhB,CAAwBC,KAA/B;AACD,KAFM,CAAP;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAiC,MAAA,OAAO,EAAE,MAAM,KAAKM,aAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWC,OAAX,GAAqB,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAuD,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1D,CAFF,EAKG,KAAKY,iBAAL,EALH,CADF,CADF;AAWD;;AAxCuC;;AA2C1C,eAAef,WAAf","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { requestFiveDayPrediction } from '../weatherAPI';\r\nimport '../styles.css';\r\n\r\nclass WeatherCard extends React.Component {\r\n\r\n  state = { favStat: false, futureData: []};\r\n\r\n  async componentDidMount() {\r\n    const forecast = await requestFiveDayPrediction(this.props.code);\r\n    console.log(forecast);\r\n    this.setState({\r\n      futureData: forecast\r\n    });\r\n    console.log(this.state.futureData.DailyForecasts)\r\n  }\r\n\r\n  changeFavStat() {\r\n    this.setState({ favStat: !this.state.favStat});\r\n    this.props.callback(this.props.code, this.state.favStat);\r\n  }\r\n\r\n  getFutureforecast() {\r\n    if (!this.state.futureData.length) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return this.state.futureData.forEach(day => {\r\n      return day.Temperature.Minimum.value; \r\n    }); \r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Typography>City_Name Temperature </Typography>\r\n          <IconButton className=\"fav-icon\" onClick={() => this.changeFavStat()}>\r\n            {this.state.favStat ? <FavoriteIcon color=\"primary\"/> : <FavoriteBorderIcon color=\"primary\"/>}\r\n          </IconButton>\r\n          {this.getFutureforecast()}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}