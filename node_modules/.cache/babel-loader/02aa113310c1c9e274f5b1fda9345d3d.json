{"ast":null,"code":"import axios from 'axios';\nimport { combineReducers } from 'redux';\nconst API_KEY = 'xJ4I5DWKpOU1XHmK1ZrDmIkgfffyLX3s';\n\nfunction requestWeatherDetails(city_code) {\n  if (city_code !== null && city_code !== undefined) {\n    console.log(\"geting weather details\");\n    axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${city_code}.json`, {\n      params: {\n        apikey: API_KEY\n      }\n    }).then(({\n      data\n    }) => {\n      this.setState({\n        weatherData: data\n      });\n      console.log(data);\n      return data;\n    });\n  }\n\n  return null;\n}\n\nfunction getCityList(city_name) {\n  var new_data = {};\n\n  if (city_name !== null && city_name !== undefined) {\n    console.log(\"getting city list\");\n    axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete`, {\n      params: {\n        apikey: API_KEY,\n        q: city_name\n      }\n    }).then(({\n      data\n    }) => {\n      console.log(data); //filter the data to key, localizedName (see console)\n      // data.map((city, index) => {\n      //   new_data[city.Key] = city.LocalizedName + \", \" + city.Country.LocalizedName;\n      // })\n\n      console.log(new_data);\n    });\n  }\n\n  return new_data;\n}\n\nexport default combineReducers({\n  requestWeather: requestWeatherDetails,\n  getOptions: getCityList\n});","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/reducers/index.js"],"names":["axios","combineReducers","API_KEY","requestWeatherDetails","city_code","undefined","console","log","get","params","apikey","then","data","setState","weatherData","getCityList","city_name","new_data","q","requestWeather","getOptions"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,qBAAT,CAA+BC,SAA/B,EAA0C;AACxC,MAAIA,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKC,SAAxC,EAAmD;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0DJ,SAAU,OAA/E,EAAuF;AACrFK,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAER;AADF;AAD6E,KAAvF,EAIGS,IAJH,CAIQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,aAAOA,IAAP;AACD,KARD;AASD;;AACD,SAAO,IAAP;AACD;;AAEA,SAASG,WAAT,CAAqBC,SAArB,EAAgC;AAC/B,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAID,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKX,SAAxC,EAAmD;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAW,qEAAX,EAAiF;AAC/EC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAER,OADF;AAENgB,QAAAA,CAAC,EAAEF;AAFG;AADuE,KAAjF,EAKGL,IALH,CAKQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACpBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EADoB,CAEpB;AACA;AACA;AACA;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACD,KAZD;AAaD;;AACD,SAAOA,QAAP;AACD;;AAED,eAAehB,eAAe,CAAE;AAC9BkB,EAAAA,cAAc,EAAEhB,qBADc;AAE9BiB,EAAAA,UAAU,EAAEL;AAFkB,CAAF,CAA9B","sourcesContent":["import axios from 'axios';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst API_KEY = 'xJ4I5DWKpOU1XHmK1ZrDmIkgfffyLX3s';\r\n\r\nfunction requestWeatherDetails(city_code) {\r\n  if (city_code !== null && city_code !== undefined) {\r\n    console.log(\"geting weather details\");\r\n    axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${city_code}.json`, {\r\n      params: {\r\n        apikey: API_KEY\r\n      }\r\n    }).then(({ data }) => {\r\n      this.setState({ weatherData: data });\r\n      console.log(data);\r\n      return data;\r\n    });\r\n  }\r\n  return null;\r\n}\r\n\r\n function getCityList(city_name) {\r\n  var new_data = {}; \r\n  if (city_name !== null && city_name !== undefined) {  \r\n    console.log(\"getting city list\");\r\n    axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete`, {\r\n      params: {\r\n        apikey: API_KEY,\r\n        q: city_name\r\n      }\r\n    }).then(({ data }) => {\r\n      console.log(data)\r\n      //filter the data to key, localizedName (see console)\r\n      // data.map((city, index) => {\r\n      //   new_data[city.Key] = city.LocalizedName + \", \" + city.Country.LocalizedName;\r\n      // })\r\n      console.log(new_data);\r\n    });  \r\n  }\r\n  return new_data;\r\n}\r\n\r\nexport default combineReducers ({\r\n  requestWeather: requestWeatherDetails,\r\n  getOptions: getCityList\r\n});"]},"metadata":{},"sourceType":"module"}