{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\Weather\\\\Prediction.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n/*This class is the card of the daily forecast (the one that appears in favorites for each city \r\nand the one that appears five times in the home screen)*/\n\nclass Prediction extends React.Component {\n  findDay(date) {\n    var day = new Date(date * 1000).toUTCString().split(', ')[0];\n    return day;\n  }\n\n  render() {\n    if (this.props.is_from_fav) {\n      var city_name = this.props.name;\n    } else {\n      var day = this.findDay(this.props.data.EpochDate);\n    }\n\n    var min_temp = this.props.data.Temperature.Minimum.Value;\n    var max_temp = this.props.data.Temperature.Maximum.Value;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.is_from_fav ? React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, city_name) : React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, day), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"min - \", min_temp, \"\\xB0C\"), React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"max - \", max_temp, \"\\xB0C\")));\n  }\n\n}\n\nexport default Prediction;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/Weather/Prediction.js"],"names":["React","Grid","Typography","Prediction","Component","findDay","date","day","Date","toUTCString","split","render","props","is_from_fav","city_name","name","data","EpochDate","min_temp","Temperature","Minimum","Value","max_temp","Maximum"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA;;;AAGC,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAExCC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,QAAIC,GAAG,GAAG,IAAIC,IAAJ,CAASF,IAAI,GAAG,IAAhB,EAAsBG,WAAtB,GAAoCC,KAApC,CAA0C,IAA1C,EAAgD,CAAhD,CAAV;AACA,WAAOH,GAAP;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWC,WAAf,EAA4B;AAC1B,UAAIC,SAAS,GAAG,KAAKF,KAAL,CAAWG,IAA3B;AACD,KAFD,MAEO;AACL,UAAIR,GAAG,GAAG,KAAKF,OAAL,CAAa,KAAKO,KAAL,CAAWI,IAAX,CAAgBC,SAA7B,CAAV;AACD;;AACD,QAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWI,IAAX,CAAgBG,WAAhB,CAA4BC,OAA5B,CAAoCC,KAAnD;AACA,QAAIC,QAAQ,GAAG,KAAKV,KAAL,CAAWI,IAAX,CAAgBG,WAAhB,CAA4BI,OAA5B,CAAoCF,KAAnD;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWC,WAAX,GAAyB,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCC,SAAzC,CAAzB,GACiB,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCP,GAAzC,CAFpB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkCW,QAAlC,UAJF,EAKE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkCI,QAAlC,UALF,CADF,CADF;AAWD;;AA1BuC;;AA6B1C,eAAenB,UAAf","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/*This class is the card of the daily forecast (the one that appears in favorites for each city \r\nand the one that appears five times in the home screen)*/\r\n\r\n class Prediction extends React.Component {\r\n\r\n  findDay(date) {\r\n    var day = new Date(date * 1000).toUTCString().split(', ')[0];\r\n    return day;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.is_from_fav) {\r\n      var city_name = this.props.name;\r\n    } else {\r\n      var day = this.findDay(this.props.data.EpochDate);\r\n    }\r\n    var min_temp = this.props.data.Temperature.Minimum.Value;\r\n    var max_temp = this.props.data.Temperature.Maximum.Value;\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          {this.props.is_from_fav ? <Typography align=\"center\" variant=\"h5\">{city_name}</Typography> :\r\n                            <Typography align=\"center\" variant=\"h5\">{day}</Typography> }\r\n          <br />\r\n          <Typography align=\"center\">min - {min_temp}°C</Typography>\r\n          <Typography align=\"center\">max - {max_temp}°C</Typography>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Prediction;"]},"metadata":{},"sourceType":"module"}