{"ast":null,"code":"import createInsetSidebar from './insetSidebar';\nimport createWidth from './width';\nimport { upperFirst } from '../utils';\nexport default ((ctx = {}) => {\n  const _ctx$sidebar = ctx.sidebar,\n        sidebar = _ctx$sidebar === void 0 ? {} : _ctx$sidebar;\n  const insetSidebar = createInsetSidebar(ctx);\n  const sidebarWidth = insetSidebar.getWidth();\n  return {\n    getWidthObj() {\n      return createWidth('auto');\n    },\n\n    getHeaderZIndexStyle: () => {},\n    getMarginStyle: ({\n      insetBehavior\n    } = {}) => {\n      if (insetBehavior === 'fit') {\n        return {\n          [`margin${upperFirst(sidebar.anchor)}`]: sidebarWidth\n        };\n      }\n\n      return undefined;\n    },\n\n    getWidthStyle() {\n      return this.getWidthObj().getStyle();\n    }\n\n  };\n});","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/node_modules/@mui-treasury/layout/models/insetEffect.js"],"names":["createInsetSidebar","createWidth","upperFirst","ctx","sidebar","insetSidebar","sidebarWidth","getWidth","getWidthObj","getHeaderZIndexStyle","getMarginStyle","insetBehavior","anchor","undefined","getWidthStyle","getStyle"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,gBAA/B;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,gBAAgB,CAACC,GAAG,GAAG,EAAP,KAAc;AAAA,uBAGxBA,GAHwB,CAE1BC,OAF0B;AAAA,QAE1BA,OAF0B,6BAEhB,EAFgB;AAI5B,QAAMC,YAAY,GAAGL,kBAAkB,CAACG,GAAD,CAAvC;AACA,QAAMG,YAAY,GAAGD,YAAY,CAACE,QAAb,EAArB;AACA,SAAO;AACLC,IAAAA,WAAW,GAAG;AACZ,aAAOP,WAAW,CAAC,MAAD,CAAlB;AACD,KAHI;;AAKLQ,IAAAA,oBAAoB,EAAE,MAAM,CAAE,CALzB;AAMLC,IAAAA,cAAc,EAAE,CAAC;AACfC,MAAAA;AADe,QAEb,EAFY,KAEL;AACT,UAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,eAAO;AACL,WAAE,SAAQT,UAAU,CAACE,OAAO,CAACQ,MAAT,CAAiB,EAArC,GAAyCN;AADpC,SAAP;AAGD;;AAED,aAAOO,SAAP;AACD,KAhBI;;AAkBLC,IAAAA,aAAa,GAAG;AACd,aAAO,KAAKN,WAAL,GAAmBO,QAAnB,EAAP;AACD;;AApBI,GAAP;AAuBD,CA7BD","sourcesContent":["import createInsetSidebar from './insetSidebar';\nimport createWidth from './width';\nimport { upperFirst } from '../utils';\nexport default ((ctx = {}) => {\n  const {\n    sidebar = {}\n  } = ctx;\n  const insetSidebar = createInsetSidebar(ctx);\n  const sidebarWidth = insetSidebar.getWidth();\n  return {\n    getWidthObj() {\n      return createWidth('auto');\n    },\n\n    getHeaderZIndexStyle: () => {},\n    getMarginStyle: ({\n      insetBehavior\n    } = {}) => {\n      if (insetBehavior === 'fit') {\n        return {\n          [`margin${upperFirst(sidebar.anchor)}`]: sidebarWidth\n        };\n      }\n\n      return undefined;\n    },\n\n    getWidthStyle() {\n      return this.getWidthObj().getStyle();\n    }\n\n  };\n});"]},"metadata":{},"sourceType":"module"}