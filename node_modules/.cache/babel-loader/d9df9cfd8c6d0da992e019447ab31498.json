{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magshimim\\\\react\\\\weather\\\\src\\\\components\\\\Favorites.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Prediction from './Weather/Prediction';\nimport { requestWeatherDetails } from '../weatherAPI';\nimport '../styles.css';\nimport { Typography } from '@material-ui/core';\n\nclass Favorites extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fav_data: {}\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.isEmpty(this.props.favorite_list)) {\n      this.props.favorite_list.Keys(async (city_code, index) => {\n        this.setState({\n          fav_data: this.state.fav_data[index] = await requestWeatherDetails(city_code)\n        });\n      });\n    }\n  }\n\n  isEmpty(obj) {\n    if (obj == null) return true;\n    if (obj.length > 0) return false;\n    if (obj.length === 0) return true;\n    if (typeof obj !== \"object\") return true;\n\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) return false;\n    }\n\n    return true;\n  }\n\n  async getFavList(city_code) {\n    const city_data = await requestWeatherDetails(city_code);\n    console.log(city_data);\n    return city_data;\n  }\n\n  getFavData() {\n    console.log(this.state.fav_data);\n\n    if (this.state.fav_data && this.state.fav_data.length) {\n      return React.createElement(\"div\", {\n        className: \"card-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.fav_data.map(fav_city => {\n        return React.createElement(Card, {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Prediction, {\n          data: fav_city,\n          is_from_fav: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      }));\n    }\n\n    return React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"No Favorites Yet\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.getFavData());\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["C:/Users/magshimim/react/weather/src/components/Favorites.js"],"names":["React","Card","Prediction","requestWeatherDetails","Typography","Favorites","Component","state","fav_data","componentDidMount","isEmpty","props","favorite_list","Keys","city_code","index","setState","obj","length","key","hasOwnProperty","call","getFavList","city_data","console","log","getFavData","map","fav_city","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,qBAAT,QAAsC,eAAtC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAF6B;AAAA;;AAIrC,QAAMC,iBAAN,GAA0B;AACxB,QAAI,CAAC,KAAKC,OAAL,CAAa,KAAKC,KAAL,CAAWC,aAAxB,CAAL,EAA6C;AAC3C,WAAKD,KAAL,CAAWC,aAAX,CAAyBC,IAAzB,CAA8B,OAAOC,SAAP,EAAkBC,KAAlB,KAA4B;AACxD,aAAKC,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBO,KAApB,IAA6B,MAAMZ,qBAAqB,CAACW,SAAD;AADtD,SAAd;AAGD,OAJD;AAKD;AACF;;AAEDJ,EAAAA,OAAO,CAACO,GAAD,EAAM;AACX,QAAIA,GAAG,IAAI,IAAX,EAAiB,OAAO,IAAP;AACjB,QAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAuB,OAAO,KAAP;AACvB,QAAID,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAuB,OAAO,IAAP;AACvB,QAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B,OAAO,IAAP;;AAC7B,SAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AACnB,UAAIG,cAAc,CAACC,IAAf,CAAoBJ,GAApB,EAAyBE,GAAzB,CAAJ,EAAmC,OAAO,KAAP;AACpC;;AACD,WAAO,IAAP;AACD;;AAED,QAAMG,UAAN,CAAiBR,SAAjB,EAA4B;AAC1B,UAAMS,SAAS,GAAG,MAAMpB,qBAAqB,CAACW,SAAD,CAA7C;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WAAOA,SAAP;AACD;;AAEDG,EAAAA,UAAU,GAAG;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,QAAvB;;AACA,QAAI,KAAKD,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAA/C,EAAuD;AACrD,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKX,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAyBC,QAAD,IAAc;AACtC,eACE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,QAAlB;AAA4B,UAAA,WAAW,EAAE,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANC,CADJ,CADF;AAWD;;AACD,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,UAAL,EADH,CADF;AAKD;;AAvDoC;;AA0DvC,eAAerB,SAAf","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport Prediction from './Weather/Prediction';\r\nimport { requestWeatherDetails } from '../weatherAPI';\r\nimport '../styles.css';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass Favorites extends React.Component{\r\n  \r\n  state = { fav_data: { } };\r\n\r\n  async componentDidMount() {\r\n    if (!this.isEmpty(this.props.favorite_list)) {\r\n      this.props.favorite_list.Keys(async (city_code, index) => {\r\n        this.setState({\r\n          fav_data: this.state.fav_data[index] = await requestWeatherDetails(city_code)\r\n        }) ;\r\n      });\r\n    }\r\n  }\r\n\r\n  isEmpty(obj) {\r\n    if (obj == null) return true;\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n    if (typeof obj !== \"object\") return true;\r\n    for (var key in obj) {\r\n      if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async getFavList(city_code) {\r\n    const city_data = await requestWeatherDetails(city_code)\r\n    console.log(city_data);\r\n    return city_data;\r\n  }\r\n\r\n  getFavData() {\r\n    console.log(this.state.fav_data);\r\n    if (this.state.fav_data && this.state.fav_data.length) {\r\n      return (\r\n        <div className=\"card-div\">\r\n          { this.state.fav_data.map((fav_city) => {\r\n            return (\r\n              <Card className=\"card\">\r\n                <Prediction data={fav_city} is_from_fav={true}/>\r\n              </Card>\r\n            );\r\n          })} \r\n        </div>\r\n      );\r\n    }\r\n    return <Typography>No Favorites Yet</Typography>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getFavData()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;"]},"metadata":{},"sourceType":"module"}